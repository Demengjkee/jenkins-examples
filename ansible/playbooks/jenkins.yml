- include_vars: "{{ item }}"
  with_items: "{{ settings }}"

- docker_info:

- name: Ensure Project Folder Exits
  file:
    path: '{{ jenkins_home }}'
    state: directory
    owner: '{{ jenkins_uid }}'
    group: '{{ jenkins_gid }}'

- name: Configure Jenkins Logging
  template:
    src: "rsyslog-jenkins.conf.j2"
    dest: "/etc/rsyslog.d/rsyslog-jenkins.conf"
  register: rsyslog_jenkins

- name: Apply RSyslog for Jenkins
  service: 
    name: rsyslog
    state: restarted
  when: rsyslog_jenkins|changed

- name: Install Plugins
  shell:
    docker run --rm 
      -e HOME={{ jenkins_home }} 
      -e REF={{ jenkins_home }}/plugins 
      -v {{ jenkins_home }}:{{ jenkins_home }}
      --log-driver syslog 
      --log-opt tag={{ tag }} {{ image }} 
      /usr/local/bin/install-plugins.sh {{ plugins }}
  args:
    creates: "{{ jenkins_home }}/plugins"
  vars:
    image: "{{ jenkins_image }}"
    plugins: '{{ jenkins_plugins | unique | join (" ") }}'
    tag: "{{ jenkins_syslog_tag }}"

- name: Copy Jenkins Docker-Compose File
  template: 
    src: docker-compose.yml.j2
    dest: '{{ compose_home }}/docker-compose.yml'
  vars:
    home: "{{ jenkins_home }}"
    image: "{{ jenkins_image }}"
    host_ip: "{{ ansible_default_ipv4.address }}"
    timezone: "Europe/London"

- name: Trying Docker-Service
  docker_service:
    project_src: '{{ compose_home }}'
  register: compose

- debug: var=jenkins

- wait_for:
    port: "{{ jenkins_port }}"
    delay: 2
  when: compose|changed